apiVersion: v1
kind: Namespace
metadata:
  name:  frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-api
  namespace: frontend
  labels:
    tipo: microservicio
    app: frontend-api
spec:
  replicas: 2
  selector:
    matchLabels:
      tipo: microservicio
      app: frontend-api
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        tipo: microservicio
        app: frontend-api
    spec:
      containers:
        - name: frontend-api
          image: k3d-registry:5001/frontend-api:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: rest
              containerPort: 3000
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-api
  namespace: frontend
  labels:
    tipo: microservicio
    app: frontend-api
spec:
  ports:
    - name: rest
      protocol: TCP
      port: 3000
      targetPort: 3000
  selector:
    tipo: microservicio
    app: frontend-api
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-app
  namespace: frontend
  labels:
    tipo: microservicio
    app: frontend-app
spec:
  replicas: 2
  selector:
    matchLabels:
      tipo: microservicio
      app: frontend-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        tipo: microservicio
        app: frontend-app
    spec:
      containers:
        - name: frontend-app
          image: k3d-registry:5001/frontend-app:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-api
  namespace: frontend
  labels:
    tipo: microservicio
    app: frontend-api
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 40mb
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx
  rules:
    - host: www.scalex.cl
      http:
        paths:
          - path: /api/?(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: frontend-api
                port:
                  number: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-app
  namespace: frontend
  labels:
    tipo: microservicio
    app: frontend-app
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    tipo: microservicio
    app: frontend-app
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-app
  namespace: frontend
  labels:
    tipo: microservicio
    app: frontend-app
spec:
  ingressClassName: nginx
  rules:
    - host: www.scalex.cl
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-app
                port:
                  number: 80