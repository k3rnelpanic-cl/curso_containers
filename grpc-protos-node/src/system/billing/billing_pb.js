// source: system/billing/billing.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.lab.system.billing.Invoice', null, global);
goog.exportSymbol('proto.lab.system.billing.InvoiceFilter', null, global);
goog.exportSymbol('proto.lab.system.billing.InvoiceItem', null, global);
goog.exportSymbol('proto.lab.system.billing.InvoiceItemAdd', null, global);
goog.exportSymbol('proto.lab.system.billing.Invoices', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lab.system.billing.InvoiceItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lab.system.billing.InvoiceItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lab.system.billing.InvoiceItem.displayName = 'proto.lab.system.billing.InvoiceItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lab.system.billing.Invoice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.lab.system.billing.Invoice.repeatedFields_, null);
};
goog.inherits(proto.lab.system.billing.Invoice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lab.system.billing.Invoice.displayName = 'proto.lab.system.billing.Invoice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lab.system.billing.InvoiceItemAdd = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lab.system.billing.InvoiceItemAdd, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lab.system.billing.InvoiceItemAdd.displayName = 'proto.lab.system.billing.InvoiceItemAdd';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lab.system.billing.InvoiceFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lab.system.billing.InvoiceFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lab.system.billing.InvoiceFilter.displayName = 'proto.lab.system.billing.InvoiceFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lab.system.billing.Invoices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.lab.system.billing.Invoices.repeatedFields_, null);
};
goog.inherits(proto.lab.system.billing.Invoices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lab.system.billing.Invoices.displayName = 'proto.lab.system.billing.Invoices';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lab.system.billing.InvoiceItem.prototype.toObject = function(opt_includeInstance) {
  return proto.lab.system.billing.InvoiceItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lab.system.billing.InvoiceItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lab.system.billing.InvoiceItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    invoiceId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    details: jspb.Message.getFieldWithDefault(msg, 3, ""),
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lab.system.billing.InvoiceItem}
 */
proto.lab.system.billing.InvoiceItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lab.system.billing.InvoiceItem;
  return proto.lab.system.billing.InvoiceItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lab.system.billing.InvoiceItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lab.system.billing.InvoiceItem}
 */
proto.lab.system.billing.InvoiceItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInvoiceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetails(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lab.system.billing.InvoiceItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lab.system.billing.InvoiceItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lab.system.billing.InvoiceItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lab.system.billing.InvoiceItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getInvoiceId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDetails();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.lab.system.billing.InvoiceItem.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.lab.system.billing.InvoiceItem} returns this
 */
proto.lab.system.billing.InvoiceItem.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 invoice_id = 2;
 * @return {number}
 */
proto.lab.system.billing.InvoiceItem.prototype.getInvoiceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.lab.system.billing.InvoiceItem} returns this
 */
proto.lab.system.billing.InvoiceItem.prototype.setInvoiceId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string details = 3;
 * @return {string}
 */
proto.lab.system.billing.InvoiceItem.prototype.getDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lab.system.billing.InvoiceItem} returns this
 */
proto.lab.system.billing.InvoiceItem.prototype.setDetails = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double amount = 4;
 * @return {number}
 */
proto.lab.system.billing.InvoiceItem.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.lab.system.billing.InvoiceItem} returns this
 */
proto.lab.system.billing.InvoiceItem.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.lab.system.billing.Invoice.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lab.system.billing.Invoice.prototype.toObject = function(opt_includeInstance) {
  return proto.lab.system.billing.Invoice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lab.system.billing.Invoice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lab.system.billing.Invoice.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    period: jspb.Message.getFieldWithDefault(msg, 2, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    invoiceStatus: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    dateCreated: (f = msg.getDateCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    details: jspb.Message.getFieldWithDefault(msg, 6, ""),
    totalCharge: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    invoiceItemsList: jspb.Message.toObjectList(msg.getInvoiceItemsList(),
    proto.lab.system.billing.InvoiceItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lab.system.billing.Invoice}
 */
proto.lab.system.billing.Invoice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lab.system.billing.Invoice;
  return proto.lab.system.billing.Invoice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lab.system.billing.Invoice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lab.system.billing.Invoice}
 */
proto.lab.system.billing.Invoice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPeriod(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInvoiceStatus(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDateCreated(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetails(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalCharge(value);
      break;
    case 13:
      var value = new proto.lab.system.billing.InvoiceItem;
      reader.readMessage(value,proto.lab.system.billing.InvoiceItem.deserializeBinaryFromReader);
      msg.addInvoiceItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lab.system.billing.Invoice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lab.system.billing.Invoice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lab.system.billing.Invoice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lab.system.billing.Invoice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPeriod();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInvoiceStatus();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDateCreated();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDetails();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTotalCharge();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getInvoiceItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.lab.system.billing.InvoiceItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.lab.system.billing.Invoice.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.lab.system.billing.Invoice} returns this
 */
proto.lab.system.billing.Invoice.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string period = 2;
 * @return {string}
 */
proto.lab.system.billing.Invoice.prototype.getPeriod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lab.system.billing.Invoice} returns this
 */
proto.lab.system.billing.Invoice.prototype.setPeriod = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string client_id = 3;
 * @return {string}
 */
proto.lab.system.billing.Invoice.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lab.system.billing.Invoice} returns this
 */
proto.lab.system.billing.Invoice.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool invoice_status = 4;
 * @return {boolean}
 */
proto.lab.system.billing.Invoice.prototype.getInvoiceStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.lab.system.billing.Invoice} returns this
 */
proto.lab.system.billing.Invoice.prototype.setInvoiceStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp date_created = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.lab.system.billing.Invoice.prototype.getDateCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.lab.system.billing.Invoice} returns this
*/
proto.lab.system.billing.Invoice.prototype.setDateCreated = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lab.system.billing.Invoice} returns this
 */
proto.lab.system.billing.Invoice.prototype.clearDateCreated = function() {
  return this.setDateCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lab.system.billing.Invoice.prototype.hasDateCreated = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string details = 6;
 * @return {string}
 */
proto.lab.system.billing.Invoice.prototype.getDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.lab.system.billing.Invoice} returns this
 */
proto.lab.system.billing.Invoice.prototype.setDetails = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional double total_charge = 7;
 * @return {number}
 */
proto.lab.system.billing.Invoice.prototype.getTotalCharge = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.lab.system.billing.Invoice} returns this
 */
proto.lab.system.billing.Invoice.prototype.setTotalCharge = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * repeated InvoiceItem invoice_items = 13;
 * @return {!Array<!proto.lab.system.billing.InvoiceItem>}
 */
proto.lab.system.billing.Invoice.prototype.getInvoiceItemsList = function() {
  return /** @type{!Array<!proto.lab.system.billing.InvoiceItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.lab.system.billing.InvoiceItem, 13));
};


/**
 * @param {!Array<!proto.lab.system.billing.InvoiceItem>} value
 * @return {!proto.lab.system.billing.Invoice} returns this
*/
proto.lab.system.billing.Invoice.prototype.setInvoiceItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.lab.system.billing.InvoiceItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.lab.system.billing.InvoiceItem}
 */
proto.lab.system.billing.Invoice.prototype.addInvoiceItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.lab.system.billing.InvoiceItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lab.system.billing.Invoice} returns this
 */
proto.lab.system.billing.Invoice.prototype.clearInvoiceItemsList = function() {
  return this.setInvoiceItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lab.system.billing.InvoiceItemAdd.prototype.toObject = function(opt_includeInstance) {
  return proto.lab.system.billing.InvoiceItemAdd.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lab.system.billing.InvoiceItemAdd} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lab.system.billing.InvoiceItemAdd.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    item: (f = msg.getItem()) && proto.lab.system.billing.InvoiceItem.toObject(includeInstance, f),
    add: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lab.system.billing.InvoiceItemAdd}
 */
proto.lab.system.billing.InvoiceItemAdd.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lab.system.billing.InvoiceItemAdd;
  return proto.lab.system.billing.InvoiceItemAdd.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lab.system.billing.InvoiceItemAdd} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lab.system.billing.InvoiceItemAdd}
 */
proto.lab.system.billing.InvoiceItemAdd.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.lab.system.billing.InvoiceItem;
      reader.readMessage(value,proto.lab.system.billing.InvoiceItem.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lab.system.billing.InvoiceItemAdd.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lab.system.billing.InvoiceItemAdd.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lab.system.billing.InvoiceItemAdd} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lab.system.billing.InvoiceItemAdd.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.lab.system.billing.InvoiceItem.serializeBinaryToWriter
    );
  }
  f = message.getAdd();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.lab.system.billing.InvoiceItemAdd.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.lab.system.billing.InvoiceItemAdd} returns this
 */
proto.lab.system.billing.InvoiceItemAdd.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional InvoiceItem item = 2;
 * @return {?proto.lab.system.billing.InvoiceItem}
 */
proto.lab.system.billing.InvoiceItemAdd.prototype.getItem = function() {
  return /** @type{?proto.lab.system.billing.InvoiceItem} */ (
    jspb.Message.getWrapperField(this, proto.lab.system.billing.InvoiceItem, 2));
};


/**
 * @param {?proto.lab.system.billing.InvoiceItem|undefined} value
 * @return {!proto.lab.system.billing.InvoiceItemAdd} returns this
*/
proto.lab.system.billing.InvoiceItemAdd.prototype.setItem = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lab.system.billing.InvoiceItemAdd} returns this
 */
proto.lab.system.billing.InvoiceItemAdd.prototype.clearItem = function() {
  return this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lab.system.billing.InvoiceItemAdd.prototype.hasItem = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool add = 3;
 * @return {boolean}
 */
proto.lab.system.billing.InvoiceItemAdd.prototype.getAdd = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.lab.system.billing.InvoiceItemAdd} returns this
 */
proto.lab.system.billing.InvoiceItemAdd.prototype.setAdd = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lab.system.billing.InvoiceFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.lab.system.billing.InvoiceFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lab.system.billing.InvoiceFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lab.system.billing.InvoiceFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    period: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    invoiceStatus: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lab.system.billing.InvoiceFilter}
 */
proto.lab.system.billing.InvoiceFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lab.system.billing.InvoiceFilter;
  return proto.lab.system.billing.InvoiceFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lab.system.billing.InvoiceFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lab.system.billing.InvoiceFilter}
 */
proto.lab.system.billing.InvoiceFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPeriod(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInvoiceStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lab.system.billing.InvoiceFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lab.system.billing.InvoiceFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lab.system.billing.InvoiceFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lab.system.billing.InvoiceFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeriod();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInvoiceStatus();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string period = 1;
 * @return {string}
 */
proto.lab.system.billing.InvoiceFilter.prototype.getPeriod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lab.system.billing.InvoiceFilter} returns this
 */
proto.lab.system.billing.InvoiceFilter.prototype.setPeriod = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_id = 2;
 * @return {string}
 */
proto.lab.system.billing.InvoiceFilter.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lab.system.billing.InvoiceFilter} returns this
 */
proto.lab.system.billing.InvoiceFilter.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool invoice_status = 3;
 * @return {boolean}
 */
proto.lab.system.billing.InvoiceFilter.prototype.getInvoiceStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.lab.system.billing.InvoiceFilter} returns this
 */
proto.lab.system.billing.InvoiceFilter.prototype.setInvoiceStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.lab.system.billing.Invoices.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lab.system.billing.Invoices.prototype.toObject = function(opt_includeInstance) {
  return proto.lab.system.billing.Invoices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lab.system.billing.Invoices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lab.system.billing.Invoices.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoicesList: jspb.Message.toObjectList(msg.getInvoicesList(),
    proto.lab.system.billing.Invoice.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lab.system.billing.Invoices}
 */
proto.lab.system.billing.Invoices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lab.system.billing.Invoices;
  return proto.lab.system.billing.Invoices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lab.system.billing.Invoices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lab.system.billing.Invoices}
 */
proto.lab.system.billing.Invoices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.lab.system.billing.Invoice;
      reader.readMessage(value,proto.lab.system.billing.Invoice.deserializeBinaryFromReader);
      msg.addInvoices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lab.system.billing.Invoices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lab.system.billing.Invoices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lab.system.billing.Invoices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lab.system.billing.Invoices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.lab.system.billing.Invoice.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Invoice invoices = 1;
 * @return {!Array<!proto.lab.system.billing.Invoice>}
 */
proto.lab.system.billing.Invoices.prototype.getInvoicesList = function() {
  return /** @type{!Array<!proto.lab.system.billing.Invoice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.lab.system.billing.Invoice, 1));
};


/**
 * @param {!Array<!proto.lab.system.billing.Invoice>} value
 * @return {!proto.lab.system.billing.Invoices} returns this
*/
proto.lab.system.billing.Invoices.prototype.setInvoicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.lab.system.billing.Invoice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.lab.system.billing.Invoice}
 */
proto.lab.system.billing.Invoices.prototype.addInvoices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lab.system.billing.Invoice, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lab.system.billing.Invoices} returns this
 */
proto.lab.system.billing.Invoices.prototype.clearInvoicesList = function() {
  return this.setInvoicesList([]);
};


goog.object.extend(exports, proto.lab.system.billing);
